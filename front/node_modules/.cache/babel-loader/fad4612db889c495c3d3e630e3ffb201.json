{"ast":null,"code":"//login \nexport var LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n\nvar loginSuccess = function loginSuccess(user) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: user\n  };\n};\n\nexport var LOGIN_ERROR = \"LOGIN_ERROR\";\n\nvar loginError = function loginError() {\n  return {\n    type: LOGIN_ERROR\n  };\n};\n\nexport var LOGIN_LOADING = \"LOGIN_LOADING\";\n\nvar loginLoading = function loginLoading() {\n  return {\n    type: LOGIN_LOADING\n  };\n}; //REGISTER\n\n\nexport var REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\n\nvar registerSuccess = function registerSuccess(msg) {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: msg\n  };\n};\n\nexport var REGISTER_ERROR = \"REGISTER_ERROR\";\n\nvar registerError = function registerError() {\n  return {\n    type: REGISTER_ERROR\n  };\n};\n\nexport var REGISTER_LOADING = \"REGISTER_LOADING\";\n\nvar registerLoading = function registerLoading() {\n  return {\n    type: REGISTER_LOADING\n  };\n}; //LOGOUT\n\n\nexport var LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\n\nvar logoutSuccess = function logoutSuccess() {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n}; //THUNKS\n\n\nexport var login = function login(user) {\n  return function (dispatch) {\n    dispatch(loginLoading());\n    fetch('http://localhost:8000/login', {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      dispatch(loginSuccess(user));\n    }).catch(function (err) {\n      dispatch(loginError());\n    });\n  };\n};\nexport var register = function register(user) {\n  return function (dispatch) {\n    dispatch(registerLoading());\n    fetch('http://localhost:8000/register', {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json;\n    }).then(function (msg) {\n      dispatch(registerSuccess(msg));\n    }).catch(function (err) {\n      dispatch(registerError());\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    dispatch(logoutSuccess());\n  };\n};","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/actions/userActions.js"],"names":["LOGIN_SUCCESS","loginSuccess","user","type","payload","LOGIN_ERROR","loginError","LOGIN_LOADING","loginLoading","REGISTER_SUCCESS","registerSuccess","msg","REGISTER_ERROR","registerError","REGISTER_LOADING","registerLoading","LOGOUT_SUCCESS","logoutSuccess","login","dispatch","fetch","method","body","JSON","stringify","headers","then","res","json","catch","err","register","logout"],"mappings":"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","sourcesContent":["//login \nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nconst loginSuccess = (user) => ({type: LOGIN_SUCCESS, payload:user})\n\nexport const LOGIN_ERROR = \"LOGIN_ERROR\"\nconst loginError = () => ({type: LOGIN_ERROR})\n\nexport const LOGIN_LOADING = \"LOGIN_LOADING\"\nconst loginLoading = () => ({type: LOGIN_LOADING})\n\n//REGISTER\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\nconst registerSuccess = (msg) => ({ type: REGISTER_SUCCESS, payload: msg })\n\nexport const REGISTER_ERROR = \"REGISTER_ERROR\"\nconst registerError = () => ({ type: REGISTER_ERROR })\n\nexport const REGISTER_LOADING = \"REGISTER_LOADING\"\nconst registerLoading = () => ({ type: REGISTER_LOADING })\n\n//LOGOUT\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\nconst logoutSuccess = () => ({ type: LOGOUT_SUCCESS })\n\n//THUNKS\n\nexport const login = (user) => dispatch => {\ndispatch(\n  loginLoading()\n)\nfetch('http://localhost:8000/login', {\n  method: 'POST',\n  body: JSON.stringify(user),\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n.then(res => res.json())\n.then(user => {\n  dispatch(\n    loginSuccess(user)\n  )\n})\n.catch(err => {\n  dispatch(\n    loginError()\n  )\n})\n}\n\nexport const register = (user) => dispatch => {\ndispatch(\n  registerLoading()\n)\nfetch('http://localhost:8000/register', {\n  method: 'POST',\n  body: JSON.stringify(user),\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n.then(res => res.json)\n.then(msg => {\n  dispatch(\n    registerSuccess(msg)\n  )\n})\n.catch(err => {\n  dispatch(\n    registerError()\n  )\n})\n}\n\nexport const logout = () => dispatch => {\ndispatch(\n  logoutSuccess()\n)\n}"]},"metadata":{},"sourceType":"module"}