{"ast":null,"code":"import EditForm from '../Component/EditForm';\nimport { updateNotes } from '../actions/notesActions';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(_ref, props) {\n  var notes = _ref.notes;\n  console.log(\"efc notes\", notes);\n  return !notes ? {\n    note: {}\n  } : {\n    note: notes.notes.filter(function (note) {\n      return note._id == props.match.params.id;\n    })[0]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchUpdateNote: function dispatchUpdateNote(_id) {\n      dispatch(updateNotes(_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/containers/EditFormContainer.js"],"names":["EditForm","updateNotes","connect","mapStateToProps","props","notes","console","log","note","filter","_id","match","params","id","mapDispatchToProps","dispatch","dispatchUpdateNote"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,uBAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAASC,KAAT,EAAmB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACA,SAAO,CAACA,KAAD,GAAO;AAACG,IAAAA,IAAI,EAAC;AAAN,GAAP,GAAiB;AACtBA,IAAAA,IAAI,EAAEH,KAAK,CAACA,KAAN,CAAYI,MAAZ,CAAmB,UAAAD,IAAI;AAAA,aAAIA,IAAI,CAACE,GAAL,IAAYN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC;AAAA,KAAvB,EAA8D,CAA9D;AADgB,GAAxB;AAGD,CALD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AAErC,SAAO;AACLC,IAAAA,kBAAkB,EAAE,4BAACN,GAAD,EAAO;AACzBK,MAAAA,QAAQ,CAACd,WAAW,CAACS,GAAD,CAAZ,CAAR;AACD;AAHI,GAAP;AAKD,CAPD;;AASA,eAAeR,OAAO,CAACC,eAAD,EAAkBW,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf","sourcesContent":["import EditForm from '../Component/EditForm'\nimport { updateNotes } from '../actions/notesActions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = ({notes},props) => {\n  console.log(\"efc notes\", notes)\n  return !notes?{note:{}}:{\n    note: notes.notes.filter(note => note._id == props.match.params.id)[0]\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  \n  return {\n    dispatchUpdateNote: (_id)=>{\n      dispatch(updateNotes(_id));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm)"]},"metadata":{},"sourceType":"module"}