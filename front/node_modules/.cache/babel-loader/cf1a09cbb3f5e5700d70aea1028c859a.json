{"ast":null,"code":"//login \nexport var LOGIN_SUCCESS = \"LOGIN_SUCCESS\"; // const loginSuccess = (user) => ({type: LOGIN_SUCCESS, payload:user})\n\nexport var LOGIN_ERROR = \"LOGIN_ERROR\"; // const loginError = () => ({type: LOGIN_ERROR})\n\nexport var LOGIN_LOADING = \"LOGIN_LOADING\"; // const loginLoading = () => ({type: LOGIN_LOADING})\n//REGISTER\n\nexport var REGISTER_SUCCESS = \"REGISTER_SUCCESS\"; // const registerSuccess = (msg) => ({ type: REGISTER_SUCCESS, payload: msg })\n\nexport var REGISTER_ERROR = \"REGISTER_ERROR\"; // const registerError = () => ({ type: REGISTER_ERROR })\n\nexport var REGISTER_LOADING = \"REGISTER_LOADING\"; // const registerLoading = () => ({ type: REGISTER_LOADING })\n//LOGOUT\n\nexport var LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"; // const logoutSuccess = () => ({ type: LOGOUT_SUCCESS })\n//THUNKS\n\nexport var login = function login(user) {\n  return function (dispatch) {\n    console.log(user);\n    return fetch('http://localhost:8000/users', {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      console.log(user);\n      dispatch(loginSuccess(user));\n    }).catch(function (err) {\n      dispatch(loginError());\n    });\n  };\n};\nexport var register = function register(user) {\n  return function (dispatch) {\n    dispatch(registerLoading());\n    fetch('http://localhost:8000/register', {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json;\n    }).then(function (msg) {\n      dispatch(registerSuccess(msg));\n    }).catch(function (err) {\n      dispatch(registerError());\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    dispatch(logoutSuccess());\n  };\n};","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/actions/userActions.js"],"names":["LOGIN_SUCCESS","LOGIN_ERROR","LOGIN_LOADING","REGISTER_SUCCESS","REGISTER_ERROR","REGISTER_LOADING","LOGOUT_SUCCESS","login","user","dispatch","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","loginSuccess","catch","err","loginError","register","registerLoading","msg","registerSuccess","registerError","logout","logoutSuccess"],"mappings":"AAAA;AACA,OAAO,IAAMA,aAAa,GAAG,eAAtB,C,CACP;;AAEA,OAAO,IAAMC,WAAW,GAAG,aAApB,C,CACP;;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB,C,CACP;AAEA;;AACA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB,C,CACP;;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CACP;;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB,C,CACP;AAEA;;AACA,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CACP;AAEA;;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,SAAU,UAAAC,QAAQ,EAAI;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACF,WAAOI,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFoC;AAI1CS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJiC,KAAhC,CAAL,CASNC,IATM,CASD,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KATF,EAUNF,IAVM,CAUD,UAAAV,IAAI,EAAI;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,MAAAA,QAAQ,CACNY,YAAY,CAACb,IAAD,CADN,CAAR;AAGD,KAfM,EAgBNc,KAhBM,CAgBA,UAAAC,GAAG,EAAI;AACZd,MAAAA,QAAQ,CACNe,UAAU,EADJ,CAAR;AAGD,KApBM,CAAP;AAqBC,GAvBoB;AAAA,CAAd;AAyBP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACjB,IAAD;AAAA,SAAU,UAAAC,QAAQ,EAAI;AAC9CA,IAAAA,QAAQ,CACNiB,eAAe,EADT,CAAR;AAGAd,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFgC;AAGtCS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH6B,KAAnC,CAAL,CASCC,IATD,CASM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAR;AAAA,KATT,EAUCF,IAVD,CAUM,UAAAS,GAAG,EAAI;AAEXlB,MAAAA,QAAQ,CACNmB,eAAe,CAACD,GAAD,CADT,CAAR;AAGD,KAfD,EAgBCL,KAhBD,CAgBO,UAAAC,GAAG,EAAI;AACZd,MAAAA,QAAQ,CACNoB,aAAa,EADP,CAAR;AAGD,KApBD;AAqBC,GAzBuB;AAAA,CAAjB;AA2BP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAM,UAAArB,QAAQ,EAAI;AACxCA,IAAAA,QAAQ,CACNsB,aAAa,EADP,CAAR;AAGC,GAJqB;AAAA,CAAf","sourcesContent":["//login \nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\n// const loginSuccess = (user) => ({type: LOGIN_SUCCESS, payload:user})\n\nexport const LOGIN_ERROR = \"LOGIN_ERROR\"\n// const loginError = () => ({type: LOGIN_ERROR})\n\nexport const LOGIN_LOADING = \"LOGIN_LOADING\"\n// const loginLoading = () => ({type: LOGIN_LOADING})\n\n//REGISTER\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\n// const registerSuccess = (msg) => ({ type: REGISTER_SUCCESS, payload: msg })\n\nexport const REGISTER_ERROR = \"REGISTER_ERROR\"\n// const registerError = () => ({ type: REGISTER_ERROR })\n\nexport const REGISTER_LOADING = \"REGISTER_LOADING\"\n// const registerLoading = () => ({ type: REGISTER_LOADING })\n\n//LOGOUT\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\n// const logoutSuccess = () => ({ type: LOGOUT_SUCCESS })\n\n//THUNKS\n\nexport const login = (user) => dispatch => {\n  console.log(user)\nreturn fetch('http://localhost:8000/users', {\n  method: 'POST',\n  body: JSON.stringify(user),\n  \n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n.then(res => res.json())\n.then(user => {\n  console.log(user)\n  dispatch(\n    loginSuccess(user)\n  )\n})\n.catch(err => {\n  dispatch(\n    loginError()\n  )\n})\n}\n\nexport const register = (user) => dispatch => {\ndispatch(\n  registerLoading()\n)\nfetch('http://localhost:8000/register', {\n  method: 'POST',\n  body: JSON.stringify(user),\n  headers: {\n    'Content-Type': 'application/json'\n    \n  }\n\n})\n.then(res => res.json)\n.then(msg => {\n  \n  dispatch(\n    registerSuccess(msg)\n  )\n})\n.catch(err => {\n  dispatch(\n    registerError()\n  )\n})\n}\n\nexport const logout = () => dispatch => {\ndispatch(\n  logoutSuccess()\n)\n}"]},"metadata":{},"sourceType":"module"}