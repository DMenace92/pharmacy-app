{"ast":null,"code":"//create\nexport var CREATE_MEDS_SUCCESS = \"CREATE_MEDS_SUCCESS\";\n\nvar createMedsSuccess = function createMedsSuccess(input) {\n  return {\n    type: CREATE_MEDS_SUCCESS,\n    payload: input\n  };\n};\n\nexport var CREATE_MEDS_LOADING = \"CREATE_MEDS_LOADING\";\n\nvar createMedsLoading = function createMedsLoading(meds) {\n  return {\n    type: CREATE_MEDS_LOADING\n  };\n};\n\nexport var CREATE_MEDS_ERROR = \"CREATE_MEDS_ERROR\";\n\nvar createMedsError = function createMedsError() {\n  return {\n    type: CREATE_MEDS_ERROR\n  };\n}; //fetch\n\n\nexport var FETCH_MEDS_SUCCESS = \"FETCH_MEDS_SUCCESS\";\n\nvar fetchMedsSuccess = function fetchMedsSuccess(meds) {\n  return {\n    type: FETCH_MEDS_SUCCESS,\n    payload: meds\n  };\n};\n\nexport var FETCH_MEDS_LOADING = \"FETCH_MEDS_LOADING\";\n\nvar fetchMedsLoading = function fetchMedsLoading(meds) {\n  return {\n    type: FETCH_MEDS_LOADING\n  };\n};\n\nexport var FETCH_MEDS_ERROR = \"FETCH_MEDS_ERROR\";\n\nvar fetchMedsError = function fetchMedsError() {\n  return {\n    type: FETCH_MEDS_ERROR\n  };\n}; //delete\n\n\nexport var DELETE_MEDS_SUCCESS = \"DELETE_MEDS_SUCCESS\";\n\nvar deleteMedsSuccess = function deleteMedsSuccess(id) {\n  return {\n    type: DELETE_MEDS_SUCCESS,\n    payload: id\n  };\n};\n\nexport var DELETE_MEDS_ERROR = \"DELETE_MEDS_ERROR\";\n\nvar deleteMedsError = function deleteMedsError() {\n  return {\n    type: DELETE_MEDS_ERROR\n  };\n};\n\nexport var DELETE_MEDS_LOADING = \"DELETE_MEDS_LOADING\";\n\nvar deleteMedsLoading = function deleteMedsLoading() {\n  return {\n    type: DELETE_MEDS_LOADING\n  };\n}; //thunk\n//FETCH\n\n\nexport var fetchMeds = function fetchMeds(token) {\n  return function (dispatch) {\n    dispatch(fetchMedsLoading());\n    fetch('http://localhost:8000/medInfo', {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (meds) {\n      console.log(meds);\n      dispatch(fetchMedsSuccess(meds));\n    }).catch(function (err) {\n      dispatch(fetchMedsError());\n    });\n  };\n};\nexport var createMeds = function createMeds(meds) {\n  return function (dispatch) {\n    dispatch(createMedsLoading());\n    fetch('http://localhost:8000/medInfo', {\n      method: 'POST',\n      body: JSON.stringify(meds),\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (meds) {\n      dispatch(createMedsSuccess(meds));\n    }).catch(function (err) {\n      dispatch(createMedsError());\n    });\n  };\n}; // //FETCH\n// export const fetchMeds = (token) => dispatch => {\n//   dispatch(\n//     fetchMedsLoading()\n//   )\n//   fetch('http://localhost:8000/medInfo', {\n//     headers: {\n//       'Content-Type': 'application/json',\n//       'token' : localStorage.getItem('token')\n//     }\n//   })\n//   .then(res => res.json())\n//   .then(meds => {\n//     console.log(meds)\n//     dispatch(\n//       fetchMedsSuccess(meds)\n//     )\n//   })\n//   .catch(err => {\n//     dispatch(\n//       fetchMedsError()\n//     )\n//   })\n// }\n//DELETE\n\nexport var deleteMeds = function deleteMeds(id, token) {\n  return function (dispatch) {\n    dispatch(deleteMedsLoading(id)); // console.log(id)\n\n    fetch('http://localhost:8000/medInfo/' + id, {\n      method: 'DELETE',\n      \"headers\": {\n        'token': localStorage.getItem('token')\n      } // mode: \"no-cors\",\n\n    }).then(function (res) {\n      return res.json();\n    }).then(function (id) {\n      dispatch(deleteMedsSuccess(id));\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(deleteMedsError(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\denni\\Documents\\myProjects\\pharmacy-app\\front\\src\\actions\\medAction.js"],"names":["CREATE_MEDS_SUCCESS","createMedsSuccess","input","type","payload","CREATE_MEDS_LOADING","createMedsLoading","meds","CREATE_MEDS_ERROR","createMedsError","FETCH_MEDS_SUCCESS","fetchMedsSuccess","FETCH_MEDS_LOADING","fetchMedsLoading","FETCH_MEDS_ERROR","fetchMedsError","DELETE_MEDS_SUCCESS","deleteMedsSuccess","id","DELETE_MEDS_ERROR","deleteMedsError","DELETE_MEDS_LOADING","deleteMedsLoading","fetchMeds","token","dispatch","fetch","headers","localStorage","getItem","then","res","json","console","log","catch","err","createMeds","method","body","JSON","stringify","deleteMeds"],"mappings":"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","sourcesContent":["//create\r\nexport const CREATE_MEDS_SUCCESS = \"CREATE_MEDS_SUCCESS\"\r\nconst createMedsSuccess = (input) => ({ type: CREATE_MEDS_SUCCESS, payload: input })\r\n\r\nexport const CREATE_MEDS_LOADING = \"CREATE_MEDS_LOADING\"\r\nconst createMedsLoading = (meds) => ({type: CREATE_MEDS_LOADING})\r\n\r\nexport const CREATE_MEDS_ERROR = \"CREATE_MEDS_ERROR\"\r\nconst createMedsError = () => ({ type: CREATE_MEDS_ERROR })\r\n\r\n//fetch\r\nexport const FETCH_MEDS_SUCCESS = \"FETCH_MEDS_SUCCESS\"\r\nconst fetchMedsSuccess = (meds) => ({type: FETCH_MEDS_SUCCESS,payload: meds})\r\n\r\nexport const FETCH_MEDS_LOADING = \"FETCH_MEDS_LOADING\"\r\nconst fetchMedsLoading = (meds) => ({type: FETCH_MEDS_LOADING})\r\n\r\nexport const FETCH_MEDS_ERROR = \"FETCH_MEDS_ERROR\"\r\nconst fetchMedsError = () => ({ type: FETCH_MEDS_ERROR })\r\n\r\n//delete\r\nexport const DELETE_MEDS_SUCCESS = \"DELETE_MEDS_SUCCESS\"\r\nconst deleteMedsSuccess = (id) => ({ type: DELETE_MEDS_SUCCESS, payload: id})\r\n\r\nexport const DELETE_MEDS_ERROR = \"DELETE_MEDS_ERROR\"\r\nconst deleteMedsError = () => ({ type: DELETE_MEDS_ERROR })\r\n\r\nexport const DELETE_MEDS_LOADING = \"DELETE_MEDS_LOADING\"\r\nconst deleteMedsLoading = () => ({ type: DELETE_MEDS_LOADING })\r\n//thunk\r\n\r\n//FETCH\r\nexport const fetchMeds = (token) => dispatch => {\r\n  dispatch(\r\n    fetchMedsLoading()\r\n  )\r\n  fetch('http://localhost:8000/medInfo', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'token' : localStorage.getItem('token')\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(meds => {\r\n    console.log(meds)\r\n    dispatch(\r\n      fetchMedsSuccess(meds)\r\n    )\r\n  })\r\n  .catch(err => {\r\n    dispatch(\r\n      fetchMedsError()\r\n    )\r\n  })\r\n  \r\n}\r\n\r\n\r\nexport const createMeds = (meds) => dispatch => {\r\n  dispatch(\r\n    createMedsLoading()\r\n  )\r\n  fetch('http://localhost:8000/medInfo', {\r\n    method: 'POST',\r\n    body: JSON.stringify(meds),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'token' : localStorage.getItem('token')\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(meds => {\r\n    dispatch(\r\n      createMedsSuccess(meds)\r\n    )\r\n  })\r\n  .catch(err => {\r\n    dispatch(\r\n      createMedsError()\r\n    )\r\n  })\r\n}\r\n// //FETCH\r\n// export const fetchMeds = (token) => dispatch => {\r\n//   dispatch(\r\n//     fetchMedsLoading()\r\n//   )\r\n//   fetch('http://localhost:8000/medInfo', {\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//       'token' : localStorage.getItem('token')\r\n//     }\r\n//   })\r\n//   .then(res => res.json())\r\n//   .then(meds => {\r\n//     console.log(meds)\r\n//     dispatch(\r\n//       fetchMedsSuccess(meds)\r\n//     )\r\n//   })\r\n//   .catch(err => {\r\n//     dispatch(\r\n//       fetchMedsError()\r\n//     )\r\n//   })\r\n  \r\n// }\r\n  //DELETE\r\n  export const deleteMeds = (id, token) => dispatch => {\r\n\r\n    dispatch(\r\n      deleteMedsLoading(id)\r\n    )\r\n    // console.log(id)\r\n    fetch('http://localhost:8000/medInfo/'+ id, {\r\n      method: 'DELETE',\r\n      \"headers\":{\r\n      'token' : localStorage.getItem('token'),\r\n      },\r\n     \r\n      // mode: \"no-cors\",\r\n      \r\n    })\r\n    \r\n    .then(res => res.json())\r\n    .then(id => {\r\n      dispatch(deleteMedsSuccess(id))\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      dispatch(\r\n        deleteMedsError(err)\r\n      )\r\n    })\r\n  }"]},"metadata":{},"sourceType":"module"}