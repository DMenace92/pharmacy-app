{"ast":null,"code":"import _objectSpread from \"/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_MEDS_SUCCESS, FETCH_MEDS_LOADING, FETCH_MEDS_ERROR } from \"../actions/medAction\";\nvar initState = {\n  meds: [],\n  medsLoading: false,\n  medsError: false\n};\n\nvar medReducers = function medReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_MEDS_SUCCESS:\n      return _objectSpread({}, state, {\n        meds: action.payload.meds[4],\n        medsLoading: false,\n        medsError: false\n      });\n\n    case FETCH_MEDS_ERROR:\n      return _objectSpread({}, state, {\n        medsError: true\n      });\n\n    case FETCH_MEDS_LOADING:\n      return _objectSpread({}, state, {\n        medsLoading: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default medReducers;","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/reducers/medReducers.js"],"names":["FETCH_MEDS_SUCCESS","FETCH_MEDS_LOADING","FETCH_MEDS_ERROR","initState","meds","medsLoading","medsError","medReducers","state","action","type","payload"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,gBAAjD,QAAyE,sBAAzE;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,WAAW,EAAE,KAFG;AAGhBC,EAAAA,SAAS,EAAE;AAHK,CAAlB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,kBAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP,IAAf,CAAoB,CAApB,CAFR;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEC,QAAAA,SAAS,EAAE;AAJb;;AAMA,SAAKJ,gBAAL;AACA,+BACOM,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIF,SAAKL,kBAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,WAAW,EAAE;AAFf;;AAIA;AACA,aAAOG,KAAP;AAnBJ;AAqBD,CAtBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import { FETCH_MEDS_SUCCESS, FETCH_MEDS_LOADING, FETCH_MEDS_ERROR } from \"../actions/medAction\";\nconst initState = {\n  meds: [],\n  medsLoading: false,\n  medsError: false,\n}\nconst medReducers = (state = initState, action) => {\n  switch (action.type){\n    case FETCH_MEDS_SUCCESS:\n      return{\n        ...state,\n        meds: action.payload.meds[4],\n        medsLoading: false,\n        medsError: false\n      }\n      case FETCH_MEDS_ERROR:\n      return{\n          ...state,\n          medsError: true,\n        }\n    case FETCH_MEDS_LOADING:\n      return{\n        ...state,\n        medsLoading: true\n    }\n      default:\n      return state\n    }\n}\nexport default medReducers\n"]},"metadata":{},"sourceType":"module"}