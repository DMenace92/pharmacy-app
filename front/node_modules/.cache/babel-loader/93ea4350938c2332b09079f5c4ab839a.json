{"ast":null,"code":"//create\nexport var CREATE_MEDS_SUCCESS = \"CREATE_MEDS_SUCCESS\";\n\nvar createMedsSuccess = function createMedsSuccess(input) {\n  return {\n    type: CREATE_MEDS_SUCCESS,\n    payload: input\n  };\n};\n\nexport var CREATE_MEDS_LOADING = \"CREATE_MEDS_LOADING\";\n\nvar createMedsLoading = function createMedsLoading(meds) {\n  return {\n    type: CREATE_MEDS_LOADING\n  };\n};\n\nexport var CREATE_MEDS_ERROR = \"CREATE_MEDS_ERROR\";\n\nvar createMedsError = function createMedsError() {\n  return {\n    type: CREATE_MEDS_ERROR\n  };\n}; //fetch\n\n\nexport var FETCH_MEDS_SUCCESS = \"FETCH_MEDS_SUCCESS\";\n\nvar fetchMedsSuccess = function fetchMedsSuccess(meds) {\n  return {\n    type: FETCH_MEDS_SUCCESS,\n    payload: meds\n  };\n};\n\nexport var FETCH_MEDS_LOADING = \"FETCH_MEDS_LOADING\";\n\nvar fetchMedsLoading = function fetchMedsLoading(meds) {\n  return {\n    type: FETCH_MEDS_LOADING\n  };\n};\n\nexport var FETCH_MEDS_ERROR = \"FETCH_MEDS_ERROR\";\n\nvar fetchMedsError = function fetchMedsError() {\n  return {\n    type: FETCH_MEDS_ERROR\n  };\n}; //delete\n//thunk\n\n\nexport var createMeds = function createMeds(meds) {\n  return function (dispatch) {\n    dispatch(createMedsLoading());\n    fetch('http://localhost:8000/medInfo', {\n      method: 'POST',\n      body: JSON.stringify(notes),\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (notes) {\n      dispatch(createNotesSuccess(notes));\n    }).catch(function (err) {\n      dispatch(createNotesError());\n    });\n  };\n};\nexport var fetchNotes = function fetchNotes(token) {\n  return function (dispatch) {\n    dispatch(fetchMedsLoading());\n    fetch('http://localhost:8000/medInfo', {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (meds) {\n      dispatch(fetchMedsSuccess(meds));\n    }).catch(function (err) {\n      dispatch(fetchMedsError());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/actions/medAction.js"],"names":["CREATE_MEDS_SUCCESS","createMedsSuccess","input","type","payload","CREATE_MEDS_LOADING","createMedsLoading","meds","CREATE_MEDS_ERROR","createMedsError","FETCH_MEDS_SUCCESS","fetchMedsSuccess","FETCH_MEDS_LOADING","fetchMedsLoading","FETCH_MEDS_ERROR","fetchMedsError","createMeds","dispatch","fetch","method","body","JSON","stringify","notes","headers","localStorage","getItem","then","res","json","createNotesSuccess","catch","err","createNotesError","fetchNotes","token"],"mappings":"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","sourcesContent":["//create\nexport const CREATE_MEDS_SUCCESS = \"CREATE_MEDS_SUCCESS\"\nconst createMedsSuccess = (input) => ({ type: CREATE_MEDS_SUCCESS, payload: input })\n\nexport const CREATE_MEDS_LOADING = \"CREATE_MEDS_LOADING\"\nconst createMedsLoading = (meds) => ({type: CREATE_MEDS_LOADING})\n\nexport const CREATE_MEDS_ERROR = \"CREATE_MEDS_ERROR\"\nconst createMedsError = () => ({ type: CREATE_MEDS_ERROR })\n\n//fetch\nexport const FETCH_MEDS_SUCCESS = \"FETCH_MEDS_SUCCESS\"\nconst fetchMedsSuccess = (meds) => ({type: FETCH_MEDS_SUCCESS,payload: meds})\n\nexport const FETCH_MEDS_LOADING = \"FETCH_MEDS_LOADING\"\nconst fetchMedsLoading = (meds) => ({type: FETCH_MEDS_LOADING})\n\nexport const FETCH_MEDS_ERROR = \"FETCH_MEDS_ERROR\"\nconst fetchMedsError = () => ({ type: FETCH_MEDS_ERROR })\n\n//delete\n//thunk\nexport const createMeds = (meds) => dispatch => {\n  dispatch(\n    createMedsLoading()\n  )\n  fetch('http://localhost:8000/medInfo', {\n    method: 'POST',\n    body: JSON.stringify(notes),\n    headers: {\n      'Content-Type': 'application/json',\n      'token' : localStorage.getItem('token')\n    }\n  })\n  .then(res => res.json())\n  .then(notes => {\n    dispatch(\n      createNotesSuccess(notes)\n    )\n  })\n  .catch(err => {\n    dispatch(\n      createNotesError()\n    )\n  })\n}\n\nexport const fetchNotes = (token) => dispatch => {\n  dispatch(\n    fetchMedsLoading()\n  )\n  fetch('http://localhost:8000/medInfo', {\n    headers: {\n      'Content-Type': 'application/json',\n      'token' : localStorage.getItem('token')\n    }\n  })\n  .then(res => res.json())\n  .then(meds => {\n    dispatch(\n      fetchMedsSuccess(meds)\n    )\n  })\n  .catch(err => {\n    dispatch(\n      fetchMedsError()\n    )\n  })\n  \n}"]},"metadata":{},"sourceType":"module"}