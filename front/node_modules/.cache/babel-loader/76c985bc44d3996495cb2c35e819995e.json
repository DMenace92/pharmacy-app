{"ast":null,"code":"import { connect } from 'react-redux';\nimport { fetchNotes as _fetchNotes } from '../actions/notesActions';\nimport NoteViewer from \"../Component/NoteViewer\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: state.notes.notes\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchNotes: function fetchNotes(notes) {\n      dispatch(_fetchNotes(notes));\n    },\n    deleteNotes: function (_deleteNotes) {\n      function deleteNotes(_x) {\n        return _deleteNotes.apply(this, arguments);\n      }\n\n      deleteNotes.toString = function () {\n        return _deleteNotes.toString();\n      };\n\n      return deleteNotes;\n    }(function (id) {\n      dispatch(deleteNotes(id));\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteViewer);","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/containers/NoteViewerContainer.js"],"names":["connect","fetchNotes","NoteViewer","mapStateToProps","state","notes","mapDispatchToProps","dispatch","deleteNotes","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,yBAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAG;AAC9B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYA;AADd,GAAP;AAID,CALD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AAErC,SAAO;AACLN,IAAAA,UAAU,EAAE,oBAACI,KAAD,EAAS;AACnBE,MAAAA,QAAQ,CAACN,WAAU,CAACI,KAAD,CAAX,CAAR;AACD,KAHI;AAILG,IAAAA,WAAW;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE,UAACC,EAAD,EAAO;AAClBF,MAAAA,QAAQ,CAACC,WAAW,CAACC,EAAD,CAAZ,CAAR;AACD,KAFU;AAJN,GAAP;AASD,CAXD;;AAYA,eAAeT,OAAO,CAACG,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CJ,UAA5C,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { fetchNotes } from '../actions/notesActions';\nimport NoteViewer from \"../Component/NoteViewer\";\n\n\nconst mapStateToProps = state=> {\n  return {\n    notes: state.notes.notes,\n   \n  }\n}\nconst mapDispatchToProps = dispatch => {\n    \n  return {\n    fetchNotes: (notes)=>{\n      dispatch(fetchNotes(notes));\n    },\n    deleteNotes: (id) =>{\n      dispatch(deleteNotes(id))\n    }\n  }\n\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(NoteViewer)"]},"metadata":{},"sourceType":"module"}