{"ast":null,"code":"//create\nexport var CREATE_MEDS_SUCCESS = \"CREATE_MEDS_SUCCESS\";\n\nvar createMedsSuccess = function createMedsSuccess(input) {\n  return {\n    type: CREATE_MEDS_SUCCESS,\n    payload: input\n  };\n};\n\nexport var CREATE_MEDS_LOADING = \"CREATE_MEDS_LOADING\";\n\nvar createMedsLoading = function createMedsLoading(meds) {\n  return {\n    type: CREATE_MEDS_LOADING\n  };\n};\n\nexport var CREATE_MEDS_ERROR = \"CREATE_MEDS_ERROR\";\n\nvar createMedsError = function createMedsError() {\n  return {\n    type: CREATE_MEDS_ERROR\n  };\n}; //fetch\n\n\nexport var FETCH_MEDS_SUCCESS = \"FETCH_MEDS_SUCCESS\";\n\nvar fetchMedsSuccess = function fetchMedsSuccess(meds) {\n  return {\n    type: FETCH_MEDS_SUCCESS,\n    payload: meds\n  };\n};\n\nexport var FETCH_MEDS_LOADING = \"FETCH_MEDS_LOADING\";\n\nvar fetchMedsLoading = function fetchMedsLoading(meds) {\n  return {\n    type: FETCH_MEDS_LOADING\n  };\n};\n\nexport var FETCH_MEDS_ERROR = \"FETCH_MEDS_ERROR\";\n\nvar fetchMedsError = function fetchMedsError() {\n  return {\n    type: FETCH_MEDS_ERROR\n  };\n}; //delete\n\n\nexport var fetchMeds = function fetchMeds() {\n  return function (dispatch) {\n    dispatch(fetchMedsLoading());\n    fetch('https://datadiscovery.nlm.nih.gov/resource/crzr-uvwg.json', {\n      'Content-Type': 'application/json'\n    }).then(function (res) {\n      return res.json();\n    }).then(function (meds) {\n      dispatch(fetchMedsSuccess(meds));\n    }).catch(function (err) {\n      dispatch(fetchMedsError());\n    });\n  };\n};\nfetch('http://localhost:8000/medInfo', {\n  method: 'POST',\n  body: JSON.stringify(_id),\n  headers: {\n    'Content-Type': 'application/json',\n    'token': token\n  }\n}).then(function (res) {\n  return res.json();\n}).then(function (_id) {\n  dispatch(deleteMedInfoSuccess(_id));\n}).catch(function (err) {\n  dispatch(deleteMedInfoError());\n});","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/actions/medAction.js"],"names":["CREATE_MEDS_SUCCESS","createMedsSuccess","input","type","payload","CREATE_MEDS_LOADING","createMedsLoading","meds","CREATE_MEDS_ERROR","createMedsError","FETCH_MEDS_SUCCESS","fetchMedsSuccess","FETCH_MEDS_LOADING","fetchMedsLoading","FETCH_MEDS_ERROR","fetchMedsError","fetchMeds","dispatch","fetch","then","res","json","catch","err","method","body","JSON","stringify","_id","headers","token","deleteMedInfoSuccess","deleteMedInfoError"],"mappings":"AAAA;AACA,OAAO,IAAMA,mBAAmB,GAAG,qBAA5B;;AACP,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,SAAY;AAAEC,IAAAA,IAAI,EAAEH,mBAAR;AAA6BI,IAAAA,OAAO,EAAEF;AAAtC,GAAZ;AAAA,CAA1B;;AAEA,OAAO,IAAMG,mBAAmB,GAAG,qBAA5B;;AACP,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD;AAAA,SAAW;AAACJ,IAAAA,IAAI,EAAEE;AAAP,GAAX;AAAA,CAA1B;;AAEA,OAAO,IAAMG,iBAAiB,GAAG,mBAA1B;;AACP,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAAEN,IAAAA,IAAI,EAAEK;AAAR,GAAP;AAAA,CAAxB,C,CAEA;;;AACA,OAAO,IAAME,kBAAkB,GAAG,oBAA3B;;AACP,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,IAAD;AAAA,SAAW;AAACJ,IAAAA,IAAI,EAAEO,kBAAP;AAA0BN,IAAAA,OAAO,EAAEG;AAAnC,GAAX;AAAA,CAAzB;;AAEA,OAAO,IAAMK,kBAAkB,GAAG,oBAA3B;;AACP,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACN,IAAD;AAAA,SAAW;AAACJ,IAAAA,IAAI,EAAES;AAAP,GAAX;AAAA,CAAzB;;AAEA,OAAO,IAAME,gBAAgB,GAAG,kBAAzB;;AACP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAAEZ,IAAAA,IAAI,EAAEW;AAAR,GAAP;AAAA,CAAvB,C,CAEA;;;AAqBA,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACzCA,IAAAA,QAAQ,CACNJ,gBAAgB,EADV,CAAR;AAMAK,IAAAA,KAAK,CAAC,2DAAD,EAA8D;AAC/D,sBAAgB;AAD+C,KAA9D,CAAL,CAGCC,IAHD,CAGM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAHT,EAICF,IAJD,CAIM,UAAAZ,IAAI,EAAI;AAEZU,MAAAA,QAAQ,CACNN,gBAAgB,CAACJ,IAAD,CADV,CAAR;AAID,KAVD,EAWCe,KAXD,CAWO,UAAAC,GAAG,EAAI;AACZN,MAAAA,QAAQ,CACNF,cAAc,EADR,CAAR;AAGD,KAfD;AAgBD,GAvBwB;AAAA,CAAlB;AAyBPG,KAAK,CAAC,+BAAD,EAAkC;AACjCM,EAAAA,MAAM,EAAE,MADyB;AAEjCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,GAAf,CAF2B;AAGjCC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEP,aAAUC;AAFH;AAHwB,CAAlC,CAAL,CAQKX,IARL,CAQU,UAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,CARb,EASKF,IATL,CASU,UAAAS,GAAG,EAAI;AAEXX,EAAAA,QAAQ,CACNc,oBAAoB,CAACH,GAAD,CADd,CAAR;AAGD,CAdL,EAeKN,KAfL,CAeW,UAAAC,GAAG,EAAI;AACZN,EAAAA,QAAQ,CACNe,kBAAkB,EADZ,CAAR;AAGD,CAnBL","sourcesContent":["//create\nexport const CREATE_MEDS_SUCCESS = \"CREATE_MEDS_SUCCESS\"\nconst createMedsSuccess = (input) => ({ type: CREATE_MEDS_SUCCESS, payload: input })\n\nexport const CREATE_MEDS_LOADING = \"CREATE_MEDS_LOADING\"\nconst createMedsLoading = (meds) => ({type: CREATE_MEDS_LOADING})\n\nexport const CREATE_MEDS_ERROR = \"CREATE_MEDS_ERROR\"\nconst createMedsError = () => ({ type: CREATE_MEDS_ERROR })\n\n//fetch\nexport const FETCH_MEDS_SUCCESS = \"FETCH_MEDS_SUCCESS\"\nconst fetchMedsSuccess = (meds) => ({type: FETCH_MEDS_SUCCESS,payload: meds})\n\nexport const FETCH_MEDS_LOADING = \"FETCH_MEDS_LOADING\"\nconst fetchMedsLoading = (meds) => ({type: FETCH_MEDS_LOADING})\n\nexport const FETCH_MEDS_ERROR = \"FETCH_MEDS_ERROR\"\nconst fetchMedsError = () => ({ type: FETCH_MEDS_ERROR })\n\n//delete\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const fetchMeds = () => dispatch => {\n  dispatch(\n    fetchMedsLoading()\n  )\n\n\n\n  fetch('https://datadiscovery.nlm.nih.gov/resource/crzr-uvwg.json', {\n      'Content-Type': 'application/json',\n  })\n  .then(res => res.json())\n  .then(meds => {\n    \n    dispatch(\n      fetchMedsSuccess(meds)\n\n    )\n  })\n  .catch(err => {\n    dispatch(\n      fetchMedsError()\n    )\n  })\n}\n\nfetch('http://localhost:8000/medInfo', {\n      method: 'POST',\n      body: JSON.stringify(_id),\n      headers: {\n        'Content-Type': 'application/json',\n        'token' : token\n      }\n    })\n    .then(res => res.json())\n    .then(_id => {\n      \n      dispatch(\n        deleteMedInfoSuccess(_id)\n      )\n    })\n    .catch(err => {\n      dispatch(\n        deleteMedInfoError()\n      )\n    })\n  \n"]},"metadata":{},"sourceType":"module"}