{"ast":null,"code":"import _classCallCheck from \"/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/Component/SearchBar.js\";\nimport React, { Component } from 'react';\nimport MainPage from './MainPage'; // import {Contact} from \"reactstrap\"\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar() {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this));\n    _this.state = {\n      meds: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"updateSearch\",\n    value: function updateSearch(e) {\n      this.setState({\n        search: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.meds);\n      var filteredMeds = this.props.meds.filter(function (meds) {\n        return meds.meds.indexOf(_this2.state.medlist) !== -1;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, filteredMeds.map(function (meds) {\n        return React.createElement(MainPage, {\n          meds: meds,\n          key: meds.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.search,\n        onChange: this.updateSearch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nexport default SearchBar; // MedSearch = (e) => {\n//     this.setState ({\n//     filterMeds: e.target.value\n//     })\n// }\n//     addMeds = (id) => {\n//         const SelectedMeds = this.state.meds.filter(meds => meds.id)\n//         console.log(SelectedMeds)\n//         this.setState(prevState => {\n//         console.log(prevState)\n//         let SelectItems = this.state.SelectItem\n//         for(let i = 0; i < this.state.meds.length; i++){\n//             if(this.state.meds[i].id === id){\n//             SelectItems.push(this.state.meds[i])\n//             }\n//         }\n//         return{SelectItems};\n//     })\n// }","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/Component/SearchBar.js"],"names":["React","Component","MainPage","SearchBar","state","meds","e","setState","search","target","value","console","log","props","filteredMeds","filter","indexOf","medlist","map","id","updateSearch","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;IAEMC,S;;;;;AACF,uBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAFS;AAKZ;;;;iCACQC,C,EAAE;AACX,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAlB,OAAd;AACH;;;6BACW;AAAA;;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWR,IAAvB;AAEA,UAAIS,YAAY,GAAG,KAAKD,KAAL,CAAWR,IAAX,CAAgBU,MAAhB,CACf,UAACV,IAAD,EAAQ;AACJ,eAAOA,IAAI,CAACA,IAAL,CAAUW,OAAV,CAAkB,MAAI,CAACZ,KAAL,CAAWa,OAA7B,MAA0C,CAAC,CAAlD;AACH,OAHc,CAAnB;AAKA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,YAAY,CAACI,GAAb,CAAiB,UAACb,IAAD,EAAQ;AACtB,eAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAhB;AACH,UAAA,GAAG,EAAEA,IAAI,CAACc,EADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,OAHA,CADL,CADJ,EAOI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWI,MADlB;AAEA,QAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADA;AAaH;;;;EA/BmBpB,S;;AAiCxB,eAAeE,SAAf,C,CAOE;AACE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, {Component} from 'react'\nimport MainPage from './MainPage';\n// import {Contact} from \"reactstrap\"\n\nclass SearchBar extends Component{\n    constructor(){\n        super();\n        this.state = {\n            meds: []\n        };\n    }\nupdateSearch(e){\n    this.setState({search: e.target.value})\n}\n    render(){\n        console.log(this.props.meds);\n        \n        let filteredMeds = this.props.meds.filter(\n            (meds)=>{\n                return meds.meds.indexOf(this.state.medlist) !== -1\n            }\n        );\n        return(\n        <div>\n            <ul>\n                {filteredMeds.map((meds)=>{\n                    return <MainPage meds={meds}\n                        key={meds.id}/>\n                })}\n            </ul>\n            <input type=\"text\"\n            value={this.state.search}\n            onChange={this.updateSearch.bind(this)}/>\n        </div>\n        )\n    }\n}\nexport default SearchBar;\n\n\n\n\n\n\n  // MedSearch = (e) => {\n    //     this.setState ({\n    //     filterMeds: e.target.value\n        \n    //     })\n    // }\n    //     addMeds = (id) => {\n    //         const SelectedMeds = this.state.meds.filter(meds => meds.id)\n    //         console.log(SelectedMeds)\n    //         this.setState(prevState => {\n    //         console.log(prevState)\n    //         let SelectItems = this.state.SelectItem\n    //         for(let i = 0; i < this.state.meds.length; i++){\n    //             if(this.state.meds[i].id === id){\n    //             SelectItems.push(this.state.meds[i])\n    //             }\n    //         }\n    //         return{SelectItems};\n            \n    //     })\n    // }"]},"metadata":{},"sourceType":"module"}