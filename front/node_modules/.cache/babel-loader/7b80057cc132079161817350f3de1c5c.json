{"ast":null,"code":"import axios from \"axios\"; //CREATE\n\nexport var CREATE_NOTES_SUCCESS = \"CREATE_NOTES_SUCCESS\";\n\nvar createNotesSuccess = function createNotesSuccess(input) {\n  return {\n    type: CREATE_NOTES_SUCCESS,\n    payload: input\n  };\n};\n\nexport var CREATE_NOTES_ERROR = \"CREATE_NOTES_ERROR\";\n\nvar createNotesError = function createNotesError() {\n  return {\n    type: CREATE_NOTES_ERROR\n  };\n};\n\nexport var CREATE_NOTES_LOADING = \"CREATE_NOTES_LOADING\";\n\nvar createNotesLoading = function createNotesLoading() {\n  return {\n    type: CREATE_NOTES_LOADING\n  };\n}; //fetch one\n\n\nexport var FETCH_ONE_NOTE_SUCCESS = \"FETCH_ONE_NOTE_SUCCESS\";\n\nvar fetchOneNoteSuccess = function fetchOneNoteSuccess(id) {\n  return {\n    type: FETCH_ONE_NOTE_SUCCESS,\n    payload: id\n  };\n};\n\nexport var FETCH_ONE_NOTE_LOADING = \"FETCH_ONE_NOTE_LOADING\";\n\nvar fetchOneNoteLoading = function fetchOneNoteLoading() {\n  return {\n    type: FETCH_ONE_NOTE_LOADING\n  };\n};\n\nexport var FETCH_ONE_NOTE_ERROR = \"FETCH_ONE_NOTE_ERROR\";\n\nvar fetchOneNoteError = function fetchOneNoteError() {\n  return {\n    type: FETCH_ONE_NOTE_ERROR\n  };\n}; //fetch\n\n\nexport var FETCH_NOTES_SUCCESS = \"FETCH_NOTES_SUCCESS\";\n\nvar fetchNotesSuccess = function fetchNotesSuccess(note) {\n  return {\n    type: FETCH_NOTES_SUCCESS,\n    payload: note\n  };\n};\n\nexport var FETCH_NOTES_LOADING = \"FETCH_NOTES_LOADING\";\n\nvar fetchNotesLoading = function fetchNotesLoading(note) {\n  return {\n    type: FETCH_NOTES_LOADING\n  };\n};\n\nexport var FETCH_NOTES_ERROR = \"FETCH_NOTES_ERROR\";\n\nvar fetchNotesError = function fetchNotesError() {\n  return {\n    type: FETCH_NOTES_ERROR\n  };\n}; //UPDATE\n\n\nexport var UPDATE_NOTES_SUCCESS = \"UPDATE_NOTES_SUCCESS\";\n\nvar updateNotesSuccess = function updateNotesSuccess(id) {\n  return {\n    type: UPDATE_NOTES_SUCCESS,\n    payload: id\n  };\n};\n\nexport var UPDATE_NOTES_LOADING = \"UPDATE_NOTES_LOADING\";\n\nvar updateNotesLoading = function updateNotesLoading() {\n  return {\n    type: UPDATE_NOTES_LOADING\n  };\n};\n\nexport var UPDATE_NOTES_ERROR = \"UPDATE_NOTES_ERROR\";\n\nvar updateNotesError = function updateNotesError() {\n  return {\n    type: UPDATE_NOTES_ERROR\n  };\n}; //DELETE\n\n\nexport var DELETE_NOTES_SUCCESS = \"DELETE_NOTES_SUCCESS\";\n\nvar deleteNotesSuccess = function deleteNotesSuccess(id) {\n  return {\n    type: DELETE_NOTES_SUCCESS,\n    payload: id\n  };\n};\n\nexport var DELETE_NOTES_ERROR = \"DELETE_NOTES_ERROR\";\n\nvar deleteNotesError = function deleteNotesError() {\n  return {\n    type: DELETE_NOTES_ERROR\n  };\n};\n\nexport var DELETE_NOTES_LOADING = \"DELETE_NOTES_LOADING\";\n\nvar deleteNotesLoading = function deleteNotesLoading() {\n  return {\n    type: DELETE_NOTES_LOADING\n  };\n}; //THUNK\n//CREATE\n\n\nexport var createNotes = function createNotes(notes) {\n  return function (dispatch) {\n    dispatch(createNotesLoading());\n    fetch('http://localhost:8000/notes', {\n      method: 'POST',\n      body: JSON.stringify(notes),\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (notes) {\n      dispatch(createNotesSuccess(notes));\n    }).catch(function (err) {\n      dispatch(createNotesError());\n    });\n  };\n}; //FETCH\n\nexport var fetchNotes = function fetchNotes(token) {\n  return function (dispatch) {\n    dispatch(fetchNotesLoading());\n    fetch('http://localhost:8000/notes', {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (notes) {\n      dispatch(fetchNotesSuccess(notes));\n    }).catch(function (err) {\n      dispatch(fetchNotesError());\n    });\n  };\n}; //FETCH ONE\n\nexport var fetchOneNote = function fetchOneNote(token, _id) {\n  return function (dispatch) {\n    dispatch(fetchOneNoteLoading());\n    fetch('http://localhost:8000/notes' + _id, {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (_id) {\n      dispatch(fetchOneNoteSuccess(_id));\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(fetchOneNoteError());\n    });\n  };\n}; //UPDATE\n\nexport var updateNotes = function updateNotes(_id, note) {\n  return function (dispatch) {\n    dispatch(updateNotesLoading(_id));\n    console.log(\"note label\", note);\n    axios.put('http://localhost:8000/notes/' + _id, note, {\n      headers: {\n        'token': localStorage.getItem('token')\n      }\n    }) // fetch('http://localhost:8000/notes/' +_id,{\n    //   method: \"PUT\",\n    // body: JSON.stringify({...note}),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     'token' : localStorage.getItem('token')\n    //   },\n    // })\n    // .then(res => res.json())\n    .then(function (res) {\n      console.log(\"res label\", res); // dispatch(\n      //   updateNotesSuccess(_id)\n      // )\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(updateNotesError(err));\n    });\n  };\n}; //DELETE\n\nexport var deleteNotes = function deleteNotes(_id, token) {\n  return function (dispatch) {\n    dispatch(deleteNotesLoading(_id));\n    fetch('http://localhost:8000/notes/' + _id, {\n      method: 'DELETE',\n      headers: {\n        'token': localStorage.getItem('token')\n      } // body: JSON.stringify(_id),\n      // headers: {\n      //   'Content-Type': 'application/json',\n      //   'token' : token\n      // }\n\n    }).then(function (res) {\n      return res.json();\n    }).then(function (id) {\n      dispatch(deleteNotesSuccess(id));\n    }).catch(function (err) {\n      dispatch(deleteNotesError(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\denni\\Documents\\myProjects\\pharmacy-app\\front\\src\\actions\\notesActions.js"],"names":["axios","CREATE_NOTES_SUCCESS","createNotesSuccess","input","type","payload","CREATE_NOTES_ERROR","createNotesError","CREATE_NOTES_LOADING","createNotesLoading","FETCH_ONE_NOTE_SUCCESS","fetchOneNoteSuccess","id","FETCH_ONE_NOTE_LOADING","fetchOneNoteLoading","FETCH_ONE_NOTE_ERROR","fetchOneNoteError","FETCH_NOTES_SUCCESS","fetchNotesSuccess","note","FETCH_NOTES_LOADING","fetchNotesLoading","FETCH_NOTES_ERROR","fetchNotesError","UPDATE_NOTES_SUCCESS","updateNotesSuccess","UPDATE_NOTES_LOADING","updateNotesLoading","UPDATE_NOTES_ERROR","updateNotesError","DELETE_NOTES_SUCCESS","deleteNotesSuccess","DELETE_NOTES_ERROR","deleteNotesError","DELETE_NOTES_LOADING","deleteNotesLoading","createNotes","notes","dispatch","fetch","method","body","JSON","stringify","headers","localStorage","getItem","then","res","json","catch","err","fetchNotes","token","fetchOneNote","_id","console","log","updateNotes","put","deleteNotes"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\n//CREATE\r\nexport const CREATE_NOTES_SUCCESS = \"CREATE_NOTES_SUCCESS\"\r\nconst createNotesSuccess = (input) => ({ type: CREATE_NOTES_SUCCESS, payload: input })\r\n\r\nexport const CREATE_NOTES_ERROR = \"CREATE_NOTES_ERROR\"\r\nconst createNotesError = () => ({ type: CREATE_NOTES_ERROR })\r\n\r\nexport const CREATE_NOTES_LOADING = \"CREATE_NOTES_LOADING\"\r\nconst createNotesLoading = () => ({ type: CREATE_NOTES_LOADING })\r\n//fetch one\r\nexport const FETCH_ONE_NOTE_SUCCESS = \"FETCH_ONE_NOTE_SUCCESS\"\r\nconst fetchOneNoteSuccess = (id) => ({type: FETCH_ONE_NOTE_SUCCESS,payload: id})\r\n\r\nexport const FETCH_ONE_NOTE_LOADING = \"FETCH_ONE_NOTE_LOADING\"\r\nconst fetchOneNoteLoading = () => ({type: FETCH_ONE_NOTE_LOADING})\r\n\r\nexport const FETCH_ONE_NOTE_ERROR = \"FETCH_ONE_NOTE_ERROR\"\r\nconst fetchOneNoteError = () => ({ type: FETCH_ONE_NOTE_ERROR })\r\n//fetch\r\nexport const FETCH_NOTES_SUCCESS = \"FETCH_NOTES_SUCCESS\"\r\nconst fetchNotesSuccess = (note) => ({type: FETCH_NOTES_SUCCESS,payload: note})\r\n\r\nexport const FETCH_NOTES_LOADING = \"FETCH_NOTES_LOADING\"\r\nconst fetchNotesLoading = (note) => ({type: FETCH_NOTES_LOADING})\r\n\r\nexport const FETCH_NOTES_ERROR = \"FETCH_NOTES_ERROR\"\r\nconst fetchNotesError = () => ({ type: FETCH_NOTES_ERROR })\r\n\r\n//UPDATE\r\nexport const UPDATE_NOTES_SUCCESS =\r\n\"UPDATE_NOTES_SUCCESS\"\r\nconst updateNotesSuccess = (id) => ({ type:\r\nUPDATE_NOTES_SUCCESS, payload:id})\r\n\r\nexport const UPDATE_NOTES_LOADING =\r\n\"UPDATE_NOTES_LOADING\"\r\nconst updateNotesLoading = () => ({ type:\r\nUPDATE_NOTES_LOADING})\r\n\r\nexport const UPDATE_NOTES_ERROR =\r\n\"UPDATE_NOTES_ERROR\"\r\nconst updateNotesError = () => ({ type:\r\nUPDATE_NOTES_ERROR})\r\n\r\n//DELETE\r\nexport const DELETE_NOTES_SUCCESS = \"DELETE_NOTES_SUCCESS\"\r\nconst deleteNotesSuccess = (id) => ({ type: DELETE_NOTES_SUCCESS, payload: id})\r\n\r\nexport const DELETE_NOTES_ERROR = \"DELETE_NOTES_ERROR\"\r\nconst deleteNotesError = () => ({ type: DELETE_NOTES_ERROR })\r\n\r\nexport const DELETE_NOTES_LOADING = \"DELETE_NOTES_LOADING\"\r\nconst deleteNotesLoading = () => ({ type: DELETE_NOTES_LOADING })\r\n\r\n//THUNK\r\n//CREATE\r\nexport const createNotes = (notes) => dispatch => {\r\n  dispatch(\r\n    createNotesLoading()\r\n  )\r\n  fetch('http://localhost:8000/notes', {\r\n    method: 'POST',\r\n    body: JSON.stringify(notes),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'token' : localStorage.getItem('token')\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(notes => {\r\n    dispatch(\r\n      createNotesSuccess(notes)\r\n    )\r\n  })\r\n  .catch(err => {\r\n    dispatch(\r\n      createNotesError()\r\n    )\r\n  })\r\n}\r\n//FETCH\r\nexport const fetchNotes = (token) => dispatch => {\r\n  dispatch(\r\n    fetchNotesLoading()\r\n  )\r\n  fetch('http://localhost:8000/notes', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'token' : localStorage.getItem('token')\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(notes => {\r\n    \r\n    dispatch(\r\n      fetchNotesSuccess(notes)\r\n    )\r\n  })\r\n\r\n  .catch(err => {\r\n    \r\n    dispatch(\r\n      fetchNotesError()\r\n    )\r\n  })\r\n  \r\n}\r\n//FETCH ONE\r\n\r\nexport const fetchOneNote = (token, _id) => dispatch => {\r\n  dispatch(\r\n    fetchOneNoteLoading()\r\n  )\r\n  fetch('http://localhost:8000/notes' + _id, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'token' : localStorage.getItem('token')\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(_id => {\r\n    \r\n    dispatch(\r\n      fetchOneNoteSuccess(_id)\r\n    )\r\n  })\r\n\r\n  .catch(err => {\r\n    console.log(err)\r\n    dispatch(\r\n      fetchOneNoteError()\r\n    )\r\n  })\r\n  \r\n}\r\n  //UPDATE\r\n  \r\n  export const updateNotes = (_id,note) =>\r\n  dispatch => {\r\n    dispatch(\r\n      updateNotesLoading(_id)\r\n    )\r\n    console.log(\"note label\",note)\r\n    axios.put('http://localhost:8000/notes/' +_id,note, {\r\n      headers: {\r\n          'token' : localStorage.getItem('token')\r\n          },\r\n    })\r\n\r\n    // fetch('http://localhost:8000/notes/' +_id,{\r\n    //   method: \"PUT\",\r\n    // body: JSON.stringify({...note}),\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //     'token' : localStorage.getItem('token')\r\n    //   },\r\n    // })\r\n    \r\n    // .then(res => res.json())\r\n    .then(res  => {\r\n     console.log(\"res label\",res)\r\n      // dispatch(\r\n      //   updateNotesSuccess(_id)\r\n      // )\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(\r\n        updateNotesError(err)\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  //DELETE\r\n  export const deleteNotes = (_id, token) => dispatch => {\r\n    dispatch(\r\n      deleteNotesLoading(_id)\r\n    )\r\n    fetch('http://localhost:8000/notes/' + _id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'token' : localStorage.getItem('token'),\r\n      },\r\n      // body: JSON.stringify(_id),\r\n      // headers: {\r\n      //   'Content-Type': 'application/json',\r\n      //   'token' : token\r\n      // }\r\n    })\r\n    .then(res => res.json())\r\n    .then(id => {\r\n      \r\n      dispatch(\r\n        deleteNotesSuccess(id)\r\n      )\r\n    })\r\n    .catch(err => {\r\n      dispatch(\r\n        deleteNotesError(err)\r\n      )\r\n    })\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}