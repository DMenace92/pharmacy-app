{"ast":null,"code":"//CREATE\nexport var CREATE_NOTES_SUCCESS = \"CREATE_NOTES_SUCCESS\";\n\nvar createNotesSuccess = function createNotesSuccess(input) {\n  return {\n    type: CREATE_NOTES_SUCCESS,\n    payload: input\n  };\n};\n\nexport var CREATE_NOTES_ERROR = \"CREATE_NOTES_ERROR\";\n\nvar createNotesError = function createNotesError() {\n  return {\n    type: CREATE_NOTES_ERROR\n  };\n};\n\nexport var CREATE_NOTES_LOADING = \"CREATE_NOTES_LOADING\";\n\nvar createNotesLoading = function createNotesLoading() {\n  return {\n    type: CREATE_NOTES_LOADING\n  };\n}; //fetch\n\n\nexport var FETCH_NOTES_SUCCESS = \"FETCH_NOTES_SUCCESS\";\n\nvar fetchNotesSuccess = function fetchNotesSuccess(note) {\n  return {\n    type: FETCH_NOTES_SUCCESS,\n    payload: note\n  };\n};\n\nexport var FETCH_NOTES_LOADING = \"FETCH_NOTES_LOADING\";\n\nvar fetchNotesLoading = function fetchNotesLoading(note) {\n  return {\n    type: FETCH_NOTES_LOADING\n  };\n};\n\nexport var FETCH_NOTES_ERROR = \"FETCH_NOTES_ERROR\";\n\nvar fetchNotesError = function fetchNotesError() {\n  return {\n    type: FETCH_NOTES_ERROR\n  };\n}; //UPDATE\n\n\nexport var UPDATE_NOTES_SUCCESS = \"UPDATE_NOTES_SUCCESS\";\n\nvar updateNotesSuccess = function updateNotesSuccess() {\n  return {\n    type: UPDATE_NOTES_SUCCESS\n  };\n};\n\nexport var UPDATE_NOTES_LOADING = \"UPDATE_NOTES_LOADING\";\n\nvar updateNotesLoading = function updateNotesLoading() {\n  return {\n    type: UPDATE_NOTES_LOADING\n  };\n};\n\nexport var UPDATE_NOTES_ERROR = \"UPDATE_NOTES_ERROR\";\n\nvar updateNotesError = function updateNotesError() {\n  return {\n    type: UPDATE_NOTES_ERROR\n  };\n}; //DELETE\n\n\nexport var DELETE_NOTES_SUCCESS = \"DELETE_NOTES_SUCCESS\";\n\nvar deleteNotesSuccess = function deleteNotesSuccess(id) {\n  return {\n    type: DELETE_NOTES_SUCCESS,\n    payload: id\n  };\n};\n\nexport var DELETE_NOTES_ERROR = \"DELETE_NOTES_ERROR\";\n\nvar deleteNotesError = function deleteNotesError() {\n  return {\n    type: DELETE_NOTES_ERROR\n  };\n};\n\nexport var DELETE_NOTES_LOADING = \"DELETE_NOTES_LOADING\";\n\nvar deleteNotesLoading = function deleteNotesLoading() {\n  return {\n    type: DELETE_NOTES_LOADING\n  };\n}; //THUNK\n//CREATE\n\n\nexport var createNotes = function createNotes(notes) {\n  return function (dispatch) {\n    dispatch(createNotesLoading());\n    fetch('http://localhost:8000/notes', {\n      method: 'POST',\n      body: JSON.stringify(notes),\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (notes) {\n      dispatch(createNotesSuccess(notes));\n    }).catch(function (err) {\n      dispatch(createNotesError());\n    });\n  };\n}; //FETCH\n\nexport var fetchNotes = function fetchNotes(token) {\n  return function (dispatch) {\n    dispatch(fetchNotesLoading());\n    fetch('http://localhost:8000/notes', {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem('token')\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (notes) {\n      dispatch(fetchNotesSuccess(notes));\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(fetchNotesError());\n    });\n  };\n}; //UPDATE\n\nexport var updateNotes = function updateNotes(_id, token) {\n  return function (dispatch) {\n    dispatch(updateNotesLoading());\n    fetch('http://localhost:8000/notes/:id', {\n      method: \"PUT\",\n      body: JSON.stringify(_id),\n      header: {\n        'Content-Type': 'application/json',\n        'token': token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (_id) {\n      dispatch(updateNotesSuccess(_id));\n    }).catch(function (err) {\n      dispatch(updateNotesError());\n    });\n  };\n}; //DELETE\n\nexport var deleteNotes = function deleteNotes(_id, token) {\n  return function (dispatch) {\n    dispatch(deleteNotesLoading());\n    fetch('http://localhost:8000/notes/' + id, {\n      method: 'DELETE' // body: JSON.stringify(_id),\n      // headers: {\n      //   'Content-Type': 'application/json',\n      //   'token' : token\n      // }\n\n    }).then(function (res) {\n      return res.json();\n    }).then(function (_id) {\n      dispatch(deleteNotesSuccess(_id));\n    }).catch(function (err) {\n      dispatch(deleteNotesError());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dennisenwiya/Documents/Q4galvanize/pharmacy-app/front/src/actions/notesActions.js"],"names":["CREATE_NOTES_SUCCESS","createNotesSuccess","input","type","payload","CREATE_NOTES_ERROR","createNotesError","CREATE_NOTES_LOADING","createNotesLoading","FETCH_NOTES_SUCCESS","fetchNotesSuccess","note","FETCH_NOTES_LOADING","fetchNotesLoading","FETCH_NOTES_ERROR","fetchNotesError","UPDATE_NOTES_SUCCESS","updateNotesSuccess","UPDATE_NOTES_LOADING","updateNotesLoading","UPDATE_NOTES_ERROR","updateNotesError","DELETE_NOTES_SUCCESS","deleteNotesSuccess","id","DELETE_NOTES_ERROR","deleteNotesError","DELETE_NOTES_LOADING","deleteNotesLoading","createNotes","notes","dispatch","fetch","method","body","JSON","stringify","headers","localStorage","getItem","then","res","json","catch","err","fetchNotes","token","console","log","updateNotes","_id","header","deleteNotes"],"mappings":"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","sourcesContent":["//CREATE\nexport const CREATE_NOTES_SUCCESS = \"CREATE_NOTES_SUCCESS\"\nconst createNotesSuccess = (input) => ({ type: CREATE_NOTES_SUCCESS, payload: input })\n\nexport const CREATE_NOTES_ERROR = \"CREATE_NOTES_ERROR\"\nconst createNotesError = () => ({ type: CREATE_NOTES_ERROR })\n\nexport const CREATE_NOTES_LOADING = \"CREATE_NOTES_LOADING\"\nconst createNotesLoading = () => ({ type: CREATE_NOTES_LOADING })\n//fetch\nexport const FETCH_NOTES_SUCCESS = \"FETCH_NOTES_SUCCESS\"\nconst fetchNotesSuccess = (note) => ({type: FETCH_NOTES_SUCCESS,payload: note})\n\nexport const FETCH_NOTES_LOADING = \"FETCH_NOTES_LOADING\"\nconst fetchNotesLoading = (note) => ({type: FETCH_NOTES_LOADING})\n\nexport const FETCH_NOTES_ERROR = \"FETCH_NOTES_ERROR\"\nconst fetchNotesError = () => ({ type: FETCH_NOTES_ERROR })\n\n//UPDATE\nexport const UPDATE_NOTES_SUCCESS =\n\"UPDATE_NOTES_SUCCESS\"\nconst updateNotesSuccess = () => ({ type:\nUPDATE_NOTES_SUCCESS})\n\nexport const UPDATE_NOTES_LOADING =\n\"UPDATE_NOTES_LOADING\"\nconst updateNotesLoading = () => ({ type:\nUPDATE_NOTES_LOADING})\n\nexport const UPDATE_NOTES_ERROR =\n\"UPDATE_NOTES_ERROR\"\nconst updateNotesError = () => ({ type:\nUPDATE_NOTES_ERROR})\n\n//DELETE\nexport const DELETE_NOTES_SUCCESS = \"DELETE_NOTES_SUCCESS\"\nconst deleteNotesSuccess = (id) => ({ type: DELETE_NOTES_SUCCESS, payload: id})\n\nexport const DELETE_NOTES_ERROR = \"DELETE_NOTES_ERROR\"\nconst deleteNotesError = () => ({ type: DELETE_NOTES_ERROR })\n\nexport const DELETE_NOTES_LOADING = \"DELETE_NOTES_LOADING\"\nconst deleteNotesLoading = () => ({ type: DELETE_NOTES_LOADING })\n\n//THUNK\n//CREATE\nexport const createNotes = (notes) => dispatch => {\n  dispatch(\n    createNotesLoading()\n  )\n  fetch('http://localhost:8000/notes', {\n    method: 'POST',\n    body: JSON.stringify(notes),\n    headers: {\n      'Content-Type': 'application/json',\n      'token' : localStorage.getItem('token')\n    }\n  })\n  .then(res => res.json())\n  .then(notes => {\n    dispatch(\n      createNotesSuccess(notes)\n    )\n  })\n  .catch(err => {\n    dispatch(\n      createNotesError()\n    )\n  })\n}\n//FETCH\nexport const fetchNotes = (token) => dispatch => {\n  dispatch(\n    fetchNotesLoading()\n  )\n  fetch('http://localhost:8000/notes', {\n    headers: {\n      'Content-Type': 'application/json',\n      'token' : localStorage.getItem('token')\n    }\n  })\n  .then(res => res.json())\n  .then(notes => {\n    \n    dispatch(\n      fetchNotesSuccess(notes)\n    )\n  })\n\n  .catch(err => {\n    console.log(err)\n    dispatch(\n      fetchNotesError()\n    )\n  })\n  \n}\n  //UPDATE\n  export const updateNotes = (_id, token) =>\n  dispatch => {\n    dispatch(\n      updateNotesLoading()\n    )\n    fetch('http://localhost:8000/notes/:id',{\n      method: \"PUT\",\n      body: JSON.stringify(_id),\n      header: {\n        'Content-Type': 'application/json',\n        'token' : token\n      }\n    })\n    .then(res => res.json())\n    .then(_id => {\n      dispatch(\n        updateNotesSuccess(_id)\n      )\n    })\n    .catch(err => {\n      dispatch(\n        updateNotesError()\n      )\n    })\n  }\n\n\n  //DELETE\n  export const deleteNotes = (_id, token) => dispatch => {\n    dispatch(\n      deleteNotesLoading()\n    )\n    fetch('http://localhost:8000/notes/' + id, {\n      method: 'DELETE',\n      // body: JSON.stringify(_id),\n      // headers: {\n      //   'Content-Type': 'application/json',\n      //   'token' : token\n      // }\n    })\n    .then(res => res.json())\n    .then(_id => {\n      dispatch(\n        deleteNotesSuccess(_id)\n      )\n    })\n    .catch(err => {\n      dispatch(\n        deleteNotesError()\n      )\n    })\n  }\n"]},"metadata":{},"sourceType":"module"}